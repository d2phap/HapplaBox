@import "../../themes/base/styles/scssVars";
@import "../../themes/base/styles/mixins.scss";
@import "../../themes/base/styles/scrollbar.scss";

:host {
  --hostOpacity: 0;
  --hostTransitionProp: opacity;
  --hostTransitionTime: 1000ms;

  @include panel(99);
  bottom: 15px;
  left: 50%;
  padding: 0 5px;
  max-width: 95vw;
  width: 100vw;
  height: auto;

  transform: translate(-50%, 0);
  transition: var(--hostTransitionProp) ease var(--hostTransitionTime);
  opacity: var(--hostOpacity);
}

.virtual-scroller {
  position: absolute;
  opacity: 0;
  pointer-events: none;
}

.virtual-item {
  position: absolute;
  user-select: none;
  display: grid;
  grid-template-rows: minmax(0, 1fr) auto;
  padding: 5px;
  border-radius: getVar(borderRadius);
  cursor: pointer;
  width: calc(var(--thumbnailSize) * 1px);
  height: calc(var(--thumbnailSize) * 1px);
  transition: all 200ms ease;

  .preview {
    border-radius: 1px;
    overflow: hidden;
    transition: all 200ms ease;

    img {
      display: block;
      width: 100%;
      height: 100%;
      max-width: 100%;
      max-height: 100%;
      object-fit: contain;
      -webkit-user-drag: none;
    }
  }

  .info {
    color: getVar(colorText);
    text-align: center;
    font-size: 12px;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    margin-top: 2px;

    display: var(--infoDisplay, none);
  }

  &:hover {
    background-color: RGBA(getVar(colorBg) / 0.5);
    box-shadow: inset 0 0 0 1px RGBA(getVar(colorBorder));

    .preview {
      transform: scale(0.95) translateY(-2px);
      box-shadow: 0 5px 20px -10px RGBA(getVar(colorText) / 0.5);
    }
  }

  &:focus-visible {
    outline: none;
    background-color: RGBA(getVar(colorBg) / 0.5);
    box-shadow: var(--focusShadow);
  }

  &:active {
    transition: all 80ms ease;
    background-color: RGBA(getVar(colorBg) / 0.7);

    .preview {
      transition: all 80ms ease;
      transform: scale(0.95) translateY(0);
    }
  }

  &.selected {
    background-color: RGBA(getVar(colorBg) / 0.7);
    box-shadow: inset 0 0 0 2px RGBA(getVar(colorAccent));

    &:focus-visible {
      box-shadow: var(--focusShadow), inset 0 0 0 2px RGBA(getVar(colorAccent));
    }
  }
}

.virtual-container {
  position: relative;
  padding: 5px 0;
  width: 100%;
  height: calc(var(--thumbnailSize) * 1px + 12px);
  overflow-y: auto;
}
